getwd()
require(shiny)
require(tidyverse)
require(tidytext)
require(DescTools)
library(igraph)
library(ggraph)
require(widyr)
wos_data <- read_csv('shiny_data.csv')
ui <- fluidPage(
titlePanel('Marine Biodiversity Keyword Co-Occurences'),
sidebarLayout(
sidebarPanel('inputs go here',
width = 2,
selectInput(
inputId =  "date_from",
label = "Select Time Period:",
choices = seq(as.Date('1990-01-01'), by = 'year', length.out = 30)),
selectInput(
inputId = 'n_words',
label = 'Select the Maximum Number of Keywords',
choices = c(100, 250, 500))
),
mainPanel('reuslts here',
visNetworkOutput("network",
height="1000px")
# plotOutput('coolplot')
)
)
)
server <- function(input, output, session){
output$network <- renderVisNetwork({
tidy_keywords <- wos_data %>%
filter(PY == input$date_from) %>%
dplyr::select(ID, UT) %>%
unnest_tokens(keyword, ID,
token = stringr::str_split, pattern = ";") %>%
mutate(keyword = StrTrim(keyword))
word_pairs <- tidy_keywords %>%
pairwise_count(keyword, UT, sort = TRUE, upper = FALSE)
word_pairs <- word_pairs[1:input$n_words, ]
word_pairs <- na.omit(word_pairs)
word_pairs_graph <- word_pairs %>%
mutate(value = n) %>%
#mutate(n_log = log(n)) %>%
#filter(n >= 100) %>%
#top_n(200, n) %>%
graph_from_data_frame(directed = FALSE)
word_pairs_graph <- simplify(word_pairs_graph)
c1 = cluster_leading_eigen(word_pairs_graph)
my_colors <- brewer.pal(length(c1), 'RdYlBu')
V(word_pairs_graph)$color <- my_colors[membership(c1)]
#E(word_pairs_graph)$value <- my_colors[membership(c1)]
#E(word_pairs_graph)$width <- my_colors[membership(c1)]
vis_g <- toVisNetworkData(word_pairs_graph)
vis_g$nodes$font.size <- 20
visNetwork(vis_g$nodes, vis_g$edges) %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(color = list(highlight = 'gold',
hover = 'gold'),
hoverWidth = 3) %>%
visNodes(color = list(higlight = 'gold',
hover = 'gold')) %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = 1,
labelOnly = FALSE, hover = TRUE),
nodesIdSelection = TRUE)
# output$coolplot <- renderPlot({
#   plot(rnorm(100))
# })
}
)
}
shinyApp(ui = ui, server = server)
require(shiny)
require(tidyverse)
require(tidytext)
require(DescTools)
library(igraph)
library(ggraph)
require(widyr)
require(visNetwork)
wos_data <- read_csv('shiny_data.csv')
ui <- fluidPage(
titlePanel('Marine Biodiversity Keyword Co-Occurences'),
sidebarLayout(
sidebarPanel('inputs go here',
width = 2,
selectInput(
inputId =  "date_from",
label = "Select Time Period:",
choices = seq(as.Date('1990-01-01'), by = 'year', length.out = 30)),
selectInput(
inputId = 'n_words',
label = 'Select the Maximum Number of Keywords',
choices = c(100, 250, 500))
),
mainPanel('reuslts here',
visNetworkOutput("network",
height="1000px")
# plotOutput('coolplot')
)
)
)
server <- function(input, output, session){
output$network <- renderVisNetwork({
tidy_keywords <- wos_data %>%
filter(PY == input$date_from) %>%
dplyr::select(ID, UT) %>%
unnest_tokens(keyword, ID,
token = stringr::str_split, pattern = ";") %>%
mutate(keyword = StrTrim(keyword))
word_pairs <- tidy_keywords %>%
pairwise_count(keyword, UT, sort = TRUE, upper = FALSE)
word_pairs <- word_pairs[1:input$n_words, ]
word_pairs <- na.omit(word_pairs)
word_pairs_graph <- word_pairs %>%
mutate(value = n) %>%
#mutate(n_log = log(n)) %>%
#filter(n >= 100) %>%
#top_n(200, n) %>%
graph_from_data_frame(directed = FALSE)
word_pairs_graph <- simplify(word_pairs_graph)
c1 = cluster_leading_eigen(word_pairs_graph)
my_colors <- brewer.pal(length(c1), 'RdYlBu')
V(word_pairs_graph)$color <- my_colors[membership(c1)]
#E(word_pairs_graph)$value <- my_colors[membership(c1)]
#E(word_pairs_graph)$width <- my_colors[membership(c1)]
vis_g <- toVisNetworkData(word_pairs_graph)
vis_g$nodes$font.size <- 20
visNetwork(vis_g$nodes, vis_g$edges) %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(color = list(highlight = 'gold',
hover = 'gold'),
hoverWidth = 3) %>%
visNodes(color = list(higlight = 'gold',
hover = 'gold')) %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = 1,
labelOnly = FALSE, hover = TRUE),
nodesIdSelection = TRUE)
# output$coolplot <- renderPlot({
#   plot(rnorm(100))
# })
}
)
}
shinyApp(ui = ui, server = server)
require(shiny)
require(tidyverse)
require(tidytext)
require(DescTools)
library(igraph)
library(ggraph)
require(widyr)
require(visNetwork)
require(RColorBrewer)
wos_data <- read_csv('shiny_data.csv')
ui <- fluidPage(
titlePanel('Marine Biodiversity Keyword Co-Occurences'),
sidebarLayout(
sidebarPanel('inputs go here',
width = 2,
selectInput(
inputId =  "date_from",
label = "Select Time Period:",
choices = seq(as.Date('1990-01-01'), by = 'year', length.out = 30)),
selectInput(
inputId = 'n_words',
label = 'Select the Maximum Number of Keywords',
choices = c(100, 250, 500))
),
mainPanel('reuslts here',
visNetworkOutput("network",
height="1000px")
# plotOutput('coolplot')
)
)
)
server <- function(input, output, session){
output$network <- renderVisNetwork({
tidy_keywords <- wos_data %>%
filter(PY == input$date_from) %>%
dplyr::select(ID, UT) %>%
unnest_tokens(keyword, ID,
token = stringr::str_split, pattern = ";") %>%
mutate(keyword = StrTrim(keyword))
word_pairs <- tidy_keywords %>%
pairwise_count(keyword, UT, sort = TRUE, upper = FALSE)
word_pairs <- word_pairs[1:input$n_words, ]
word_pairs <- na.omit(word_pairs)
word_pairs_graph <- word_pairs %>%
mutate(value = n) %>%
#mutate(n_log = log(n)) %>%
#filter(n >= 100) %>%
#top_n(200, n) %>%
graph_from_data_frame(directed = FALSE)
word_pairs_graph <- simplify(word_pairs_graph)
c1 = cluster_leading_eigen(word_pairs_graph)
my_colors <- brewer.pal(length(c1), 'RdYlBu')
V(word_pairs_graph)$color <- my_colors[membership(c1)]
#E(word_pairs_graph)$value <- my_colors[membership(c1)]
#E(word_pairs_graph)$width <- my_colors[membership(c1)]
vis_g <- toVisNetworkData(word_pairs_graph)
vis_g$nodes$font.size <- 20
visNetwork(vis_g$nodes, vis_g$edges) %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(color = list(highlight = 'gold',
hover = 'gold'),
hoverWidth = 3) %>%
visNodes(color = list(higlight = 'gold',
hover = 'gold')) %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = 1,
labelOnly = FALSE, hover = TRUE),
nodesIdSelection = TRUE)
# output$coolplot <- renderPlot({
#   plot(rnorm(100))
# })
}
)
}
shinyApp(ui = ui, server = server)
ls()
wos_data
install.packages('rsconnect')
install.packages("rsconnect")
rsconnect::setAccountInfo(name='petertolochko',
token='CD0467958A77E6C2B4B7F34FDA893E52',
secret='<SECRET>')
rsconnect::setAccountInfo(name='petertolochko',
token='CD0467958A77E6C2B4B7F34FDA893E52',
secret='MKzDpQ0H34M5kT1RgbcPN3BYXo79LfJDGsXzLW3Z')
require(shiny)
require(tidyverse)
require(tidytext)
require(DescTools)
library(igraph)
library(ggraph)
require(widyr)
require(visNetwork)
require(RColorBrewer)
wos_data <- read_csv('shiny_data.csv')
ui <- fluidPage(
titlePanel('Marine Biodiversity Keyword Co-Occurences'),
sidebarLayout(
sidebarPanel('Please Make Your Selection',
width = 2,
selectInput(
inputId =  "date_from",
label = "Select Time Period:",
choices = seq(as.Date('1990-01-01'), by = 'year', length.out = 30)),
sliderInput(
inputId = 'n_words',
label = 'Select the Maximum Number of Keyword Pairs',
min = 50,
max = 750)
),
mainPanel('Please Choose a Keyword',
visNetworkOutput("network",
height="1000px")
# plotOutput('coolplot')
)
)
)
server <- function(input, output, session){
output$network <- renderVisNetwork({
tidy_keywords <- wos_data %>%
filter(PY == input$date_from) %>%
dplyr::select(ID, UT) %>%
unnest_tokens(keyword, ID,
token = stringr::str_split, pattern = ";") %>%
mutate(keyword = StrTrim(keyword))
word_pairs <- tidy_keywords %>%
pairwise_count(keyword, UT, sort = TRUE, upper = FALSE)
word_pairs <- word_pairs[1:input$n_words, ]
word_pairs <- na.omit(word_pairs)
word_pairs_graph <- word_pairs %>%
mutate(value = n) %>%
#mutate(n_log = log(n)) %>%
#filter(n >= 100) %>%
#top_n(200, n) %>%
graph_from_data_frame(directed = FALSE)
word_pairs_graph <- simplify(word_pairs_graph)
c1 = cluster_leading_eigen(word_pairs_graph)
my_colors <- brewer.pal(length(c1), 'RdYlBu')
V(word_pairs_graph)$color <- my_colors[membership(c1)]
#E(word_pairs_graph)$value <- my_colors[membership(c1)]
#E(word_pairs_graph)$width <- my_colors[membership(c1)]
vis_g <- toVisNetworkData(word_pairs_graph)
vis_g$nodes$font.size <- 20
visNetwork(vis_g$nodes, vis_g$edges) %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(color = list(highlight = 'gold',
hover = 'gold'),
hoverWidth = 3) %>%
visNodes(color = list(higlight = 'gold',
hover = 'gold')) %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = 1,
labelOnly = FALSE, hover = TRUE),
nodesIdSelection = TRUE)
# output$coolplot <- renderPlot({
#   plot(rnorm(100))
# })
}
)
}
shinyApp(ui = ui, server = server)
require(shiny)
require(tidyverse)
require(tidytext)
require(DescTools)
library(igraph)
library(ggraph)
require(widyr)
require(visNetwork)
require(RColorBrewer)
wos_data <- read_csv('shiny_data.csv')
ui <- fluidPage(
titlePanel('Marine Biodiversity Keyword Co-Occurences'),
sidebarLayout(
sidebarPanel('Please Make Your Selection',
width = 2,
selectInput(
inputId =  "date_from",
label = "Select Time Period:",
choices = seq(as.Date('1990-01-01'), by = 'year', length.out = 30)),
sliderInput(
inputId = 'n_words',
label = 'Select the Maximum Number of Keyword Pairs',
min = 50,
max = 750)
),
mainPanel('Please Choose a Keyword',
visNetworkOutput("network",
height="1000px")
# plotOutput('coolplot')
)
)
)
server <- function(input, output, session){
output$network <- renderVisNetwork({
tidy_keywords <- wos_data %>%
filter(PY == input$date_from) %>%
dplyr::select(ID, UT) %>%
unnest_tokens(keyword, ID,
token = stringr::str_split, pattern = ";") %>%
mutate(keyword = StrTrim(keyword))
word_pairs <- tidy_keywords %>%
pairwise_count(keyword, UT, sort = TRUE, upper = FALSE)
word_pairs <- word_pairs[1:input$n_words, ]
word_pairs <- na.omit(word_pairs)
word_pairs_graph <- word_pairs %>%
mutate(value = n) %>%
#mutate(n_log = log(n)) %>%
#filter(n >= 100) %>%
#top_n(200, n) %>%
graph_from_data_frame(directed = FALSE)
word_pairs_graph <- simplify(word_pairs_graph)
c1 = cluster_leading_eigen(word_pairs_graph)
my_colors <- brewer.pal(length(c1), 'RdYlBu')
V(word_pairs_graph)$color <- my_colors[membership(c1)]
#E(word_pairs_graph)$value <- my_colors[membership(c1)]
#E(word_pairs_graph)$width <- my_colors[membership(c1)]
vis_g <- toVisNetworkData(word_pairs_graph)
vis_g$nodes$font.size <- 20
visNetwork(vis_g$nodes, vis_g$edges) %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(color = list(highlight = 'gold',
hover = 'gold'),
hoverWidth = 3) %>%
visNodes(color = list(higlight = 'gold',
hover = 'gold')) %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = 1,
labelOnly = FALSE, hover = TRUE),
nodesIdSelection = TRUE)
# output$coolplot <- renderPlot({
#   plot(rnorm(100))
# })
}
)
}
shinyApp(ui = ui, server = server)
require(shiny)
require(tidyverse)
require(tidytext)
require(DescTools)
library(igraph)
library(ggraph)
require(widyr)
require(visNetwork)
require(RColorBrewer)
wos_data <- read_csv('shiny_data.csv')
ui <- fluidPage(
titlePanel('Marine Biodiversity Keyword Co-Occurences'),
sidebarLayout(
sidebarPanel('Please Make Your Selection',
width = 2,
selectInput(
inputId =  "date_from",
label = "Select Time Period:",
choices = seq(as.Date('1990-01-01'), by = 'year', length.out = 30)),
sliderInput(
inputId = 'n_words',
label = 'Select the Maximum Number of Keyword Pairs',
min = 50,
max = 750)
),
mainPanel('Please Choose a Keyword',
visNetworkOutput("network",
height="1000px")
# plotOutput('coolplot')
)
)
)
server <- function(input, output, session){
output$network <- renderVisNetwork({
tidy_keywords <- wos_data %>%
filter(PY == input$date_from) %>%
dplyr::select(ID, UT) %>%
unnest_tokens(keyword, ID,
token = stringr::str_split, pattern = ";") %>%
mutate(keyword = StrTrim(keyword))
word_pairs <- tidy_keywords %>%
pairwise_count(keyword, UT, sort = TRUE, upper = FALSE)
word_pairs <- word_pairs[1:input$n_words, ]
word_pairs <- na.omit(word_pairs)
word_pairs_graph <- word_pairs %>%
mutate(value = n) %>%
#mutate(n_log = log(n)) %>%
#filter(n >= 100) %>%
#top_n(200, n) %>%
graph_from_data_frame(directed = FALSE)
word_pairs_graph <- simplify(word_pairs_graph)
c1 = cluster_leading_eigen(word_pairs_graph)
my_colors <- brewer.pal(length(c1), 'RdYlBu')
V(word_pairs_graph)$color <- my_colors[membership(c1)]
#E(word_pairs_graph)$value <- my_colors[membership(c1)]
#E(word_pairs_graph)$width <- my_colors[membership(c1)]
vis_g <- toVisNetworkData(word_pairs_graph)
vis_g$nodes$font.size <- 20
visNetwork(vis_g$nodes, vis_g$edges) %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(color = list(highlight = 'gold',
hover = 'gold'),
hoverWidth = 3) %>%
visNodes(color = list(higlight = 'gold',
hover = 'gold')) %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = 1,
labelOnly = FALSE, hover = TRUE),
nodesIdSelection = TRUE)
# output$coolplot <- renderPlot({
#   plot(rnorm(100))
# })
}
)
}
shinyApp(ui = ui, server = server)
